data:
  tokenizer: null
  train_files: data/math/train_${reward_fn.extraction_type}.parquet
  val_files: data/math/test_${reward_fn.extraction_type}.parquet
  prompt_key: prompt
  max_prompt_length: 8096
  max_response_length: 8096
  max_validation_prompt_length: 8096
  train_batch_size: 1024
  val_batch_size: 1312
  return_raw_input_ids: False  # This should be set to true when the tokenizer between policy and rm differs
  return_raw_chat: False
  shuffle: True

actor_rollout_ref:
  hybrid_engine: True
  model:
    path: ~/models/deepseek-llm-7b-chat
    pretrained_tokenizer: True
    external_lib: null
    override_config: { }
    enable_gradient_checkpointing: True
    use_remove_padding: False
  actor:
    strategy: fsdp  # This is for backward-compatibility
    ppo_mini_batch_size: 256
    ppo_micro_batch_size: null # will be deprecated, use ppo_micro_batch_size_per_gpu
    ppo_micro_batch_size_per_gpu: null
    use_dynamic_bsz: False
    ppo_max_token_len_per_gpu: 16384 # n * ${data.max_prompt_length} + ${data.max_response_length}
    grad_clip: 1.0
    clip_ratio: 0.2
    entropy_coeff: 0.001
    use_kl_loss: False # True for GRPO
    kl_loss_coef: 0.001 # for grpo
    kl_loss_type: low_var_kl # for grpo
    ppo_epochs: 1
    shuffle: False
    ulysses_sequence_parallel_size: 1 # sp size
    optim:
      lr: 1e-6
      lr_warmup_steps_ratio: 0.  # the total steps will be injected during runtime
      min_lr_ratio: null   # only useful for warmup with cosine
      warmup_style: constant  # select from constant/cosine
      total_training_steps: -1  # must be override by program
    fsdp_config:
      wrap_policy:
        # transformer_layer_cls_to_wrap: None
        min_num_params: 0
      param_offload: False
      grad_offload: False
      optimizer_offload: False
      fsdp_size: -1
  ref:
    include_ref: True
    fsdp_config:
      param_offload: False
      wrap_policy:
        # transformer_layer_cls_to_wrap: None
        min_num_params: 0
    log_prob_micro_batch_size: null # will be deprecated, use log_prob_micro_batch_size_per_gpu
    log_prob_micro_batch_size_per_gpu: null
    log_prob_use_dynamic_bsz: ${actor_rollout_ref.actor.use_dynamic_bsz}
    log_prob_max_token_len_per_gpu: ${actor_rollout_ref.actor.ppo_max_token_len_per_gpu}
    ulysses_sequence_parallel_size: ${actor_rollout_ref.actor.ulysses_sequence_parallel_size} # sp size
  rollout:
    name: vllm
    temperature: 1.0
    top_k: -1 # 0 for hf rollout, -1 for vllm rollout
    top_p: 1
    prompt_length: ${data.max_prompt_length}  # not use for opensource
    response_length: ${data.max_response_length}
    # for vllm rollout
    dtype: bfloat16 # should align with FSDP
    gpu_memory_utilization: 0.5
    ignore_eos: False
    enforce_eager: True
    free_cache_engine: True
    load_format: dummy_dtensor
    tensor_model_parallel_size: 2
    max_num_batched_tokens: 8192
    max_num_seqs: 1024
    log_prob_micro_batch_size: null # will be deprecated, use log_prob_micro_batch_size_per_gpu
    log_prob_micro_batch_size_per_gpu: null
    log_prob_use_dynamic_bsz: ${actor_rollout_ref.actor.use_dynamic_bsz}
    log_prob_max_token_len_per_gpu: ${actor_rollout_ref.actor.ppo_max_token_len_per_gpu}
    disable_log_stats: True
    enable_chunked_prefill: True # could get higher throughput
    # for hf rollout
    do_sample: True
    # number of responses (i.e. num sample times)
    n: 1 # > 1 for grpo

critic:
  strategy: fsdp
  optim:
    lr: 1e-5
    lr_warmup_steps_ratio: 0.  # the total steps will be injected during runtime
    min_lr_ratio: null   # only useful for warmup with cosine
    warmup_style: constant  # select from constant/cosine
    total_training_steps: -1  # must be override by program
  model:
    path: ~/models/deepseek-llm-7b-chat
    tokenizer_path: ${actor_rollout_ref.model.path}
    override_config: { }
    external_lib: ${actor_rollout_ref.model.external_lib}
    enable_gradient_checkpointing: True
    use_remove_padding: False
    fsdp_config:
      param_offload: False
      grad_offload: False
      optimizer_offload: False
      wrap_policy:
        # transformer_layer_cls_to_wrap: None
        min_num_params: 0
      fsdp_size: -1
  ppo_mini_batch_size: ${actor_rollout_ref.actor.ppo_mini_batch_size}
  ppo_micro_batch_size: null # will be deprecated, use ppo_micro_batch_size_per_gpu
  ppo_micro_batch_size_per_gpu: null
  forward_micro_batch_size: ${critic.ppo_micro_batch_size}
  forward_micro_batch_size_per_gpu: ${critic.ppo_micro_batch_size_per_gpu}
  use_dynamic_bsz: ${actor_rollout_ref.actor.use_dynamic_bsz}
  ppo_max_token_len_per_gpu: 32768 # (${actor_rollout_ref.actor.ppo_max_token_len_per_gpu}) * 2
  forward_max_token_len_per_gpu: ${critic.ppo_max_token_len_per_gpu}
  ulysses_sequence_parallel_size: 1 # sp size
  ppo_epochs: ${actor_rollout_ref.actor.ppo_epochs}
  shuffle: ${actor_rollout_ref.actor.shuffle}
  grad_clip: 1.0
  cliprange_value: 0.5

reward_model:
  enable: False
  strategy: fsdp
  model:
    input_tokenizer: ${actor_rollout_ref.model.path}  # set this to null if the chat template is identical
    path: ~/models/FsfairX-LLaMA3-RM-v0.1
    external_lib: ${actor_rollout_ref.model.external_lib}
    use_remove_padding: False
    fsdp_config:
      min_num_params: 0
      param_offload: False
      fsdp_size: -1
  micro_batch_size: null # will be deprecated, use micro_batch_size_per_gpu
  micro_batch_size_per_gpu: null # set a number
  max_length: null
  ulysses_sequence_parallel_size: 1 # sp size
  use_dynamic_bsz: ${critic.use_dynamic_bsz}
  forward_max_token_len_per_gpu: ${critic.forward_max_token_len_per_gpu}

algorithm:
  gamma: 1.0
  lam: 1.0
  adv_estimator: reinforce_plus_plus
  kl_penalty: kl  # how to estimate kl divergence
  kl_ctrl:
    type: fixed
    kl_coef: 0.001

trainer:
  debug: False
  debug_port: 5678
  wandb_run_id: null
  total_epochs: 30
  total_training_steps: null
  project_name: verl_examples
  experiment_name: gsm8k
  logger: [ 'console', 'wandb' ]
  val_generations_to_log_to_wandb: 0
  nnodes: 1
  n_gpus_per_node: 8
  save_freq: -1
  # auto: find the last ckpt to resume. If can't find, start from scratch
  resume_mode: auto # or auto or resume_path if 
  resume_from_path: False
  test_freq: -1
  critic_warmup: 0
  default_hdfs_dir: null
  default_local_dir: checkpoints/code_io/${trainer.project_name}/${trainer.experiment_name}
  remove_previous_ckpt_in_save: False
  del_local_ckpt_after_load: False
  wandb_tags: null

reward_fn:
  extraction_type: answer_addition
  math_metric: deepscaler #[math_verify|deepscaler|union]
  splitter: "Assistant:"
  boxed_retry: False

azr:
  seed: 1
  executor_max_workers: 1
  executor_cleanup_frequency: 1
  problem_types:
    - code_i
    - code_o
    - code_f
  pred_data_mix_strategy: "max_new"  # [uniform_total, max_new, half_new, step]
  gen_data_probabilities_strategy: "uniform"  # [uniform, step]
  past_epoch_window: ${azr.data_selection_strategy.update_iteration}
  seed_dataset: null
  error_seed_dataset: null
  output_seed_path: null
  output_error_seed_path: null
  output_code_f_seed_path: null
  code_f_seed_dataset: null
  pretrain_pred_steps: -1
  executor: qwq
  ast_check: True
  execute_max_timeout: 10 # seconds
  random_print_max_programs: 3
  train_propose: True
  data_selection_strategy:
    io_n: 6
    update_iteration: 1
    data_len: null # dummy set
    seed_batch_factor: 4
    content_max_length: 8096
    valid_program_filter: all # [all (all valids), non_one (all valids except 100% accuracy), non_extremes (all valids except 0% and 100% accuracy)]
    max_programs: null
    batched_estimate: False
    composite_function_n_min: -1
    composite_function_n_max: -1
    composite_chance: 0.5
    composite_start_step: -1
    max_programs_initial: ${azr.data_selection_strategy.composite_function_n_max}
    composite_chance_initial: ${azr.data_selection_strategy.composite_chance}
    composite_scheduler:
      enabled: False
      update_num_programs_start: 101
      update_num_programs_interval: 50
      num_programs_max: 3
      update_probability_start: 101
      update_probability_interval: 50
      update_probability_max: 0.8
      update_probability_increment: 0.01
    num_inputs: 10 # for code_f, how many inputs to generate
    banned_words:
      - logging
      - random
      - multiprocessing
      - pebble
      - subprocess
      - threading
      - datetime
      - time
      - hashlib
      - hmac
      - bcrypt
      - os.sys
      - os.path
      - sys.exit
      - os.environ
      - calendar
      - datetime
    banned_keywords_for_errors_and_exceptions:
      # - raise
      # - assert
      # - try
      # - except
  reward:
    n_samples: 8
    extract_code_block: True
    code_f_reward_type: binary # [accuracy, binary]
    generation_reward_config:
      format_reward: True
      reject_multiple_functions: True
      reject_test_input_in_code: False
      f_replace_location: not_first # [not_first, any_last, any_first, not_last]
      intrinsic_combine_method: sum # [sum, multiply, sum_multiply]
      remove_after_return: False # remove global variables
      remove_comments: False
      remove_print: False
      use_original_code_as_ref: False
      generation_accuracy_convertion: one_minus
      remove_input_from_snippet: False # prompting
      include_references: True # ablation for unconditional generation
      complexity_reward:
        enabled: False
        coef: 0.0
        max: 0.5
      mean_edit_distance_reward:
        enabled: False
        coef: 0.0
        max: 0.5
      halstead_reward:
        enabled: False
        coef: 0.0
        max: 0.5
      answer_diversity_reward:
        enabled: False
        coef: 0.0
        max: 0.5
        hierarchical: False
      f_input_answer_diversity_reward:
        enabled: False
        coef: 0.0
        max: 0.5
        hierarchical: False
      f_output_answer_diversity_reward:
        enabled: False
        coef: 0.0
        max: 0.5
        hierarchical: False
